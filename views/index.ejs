<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <title>Branch Switcher</title>
    <style>
      [v-cloak] {
        display: none;
      }
    </style>
    <link
      href="https://static-s.styd.cn/201810181619/bulma.min.css"
      rel="stylesheet"
    />
  </head>

  <body>
    <div id="app" v-cloak>
      <nav id="navbar" class="navbar has-shadow is-spaced">
        <div class="container">
          <div class="navbar-brand">
            <a class="navbar-item">
              <img src="https://static-s.styd.cn/201810181618/bulma-logo.png" />
            </a>
            <a class="navbar-item">
              <h1>Branch Switcher</h1>
            </a>
            <a class="navbar-item">
              <button @click='goBack' class='button is-small'>返回</button>
            </a>
          </div>
        </div>
      </nav>

      <main>
        <section class="hero" :class="[is_ok?'is-primary':'is-danger']">
          <div class="hero-body">
            <div class="container">
              <h1 class="title">
                <div>
                  应用：[ {{ app_name }} ]
                  <span v-if="is_show_branch"
                    >当前分支：[{{ branch_text }}]
                  </span>
                </div>
              </h1>

              <div class="subtitle">
                {{ msg }}
              </div>
              <div v-if="is_ok" class="subtitle">
                项目来源： <a :href="from">{{ from }}</a>
              </div>
            </div>
          </div>
        </section>
    
        <div class="section container" v-if="is_show_form">
          <div class='columns'>
            <!-- 前端分支 -->
            <div class='column'>
              <div class="field">
                <label class="label">切换前端分支：</label>
                <div class="control">
                  <div class="select">
                    <select @change='onChangeBranch' placeholder="请选择分支" v-model="branch">
                      <option value="">[默认分支]</option>
                      <option v-for="b in branches" :key="b.name" :value="b.name">
                      {{ b.name }} -- {{b.stats.mtime | dateFilter }} 更新</option>
                    </select>
                  </div>
                </div>
              </div>
              <div class="field is-grouped">
                <div class="control">
                  <button v-if='branch' @click="onDelete" class="button is-danger is-small">删除</button>
                </div>
              </div>
            </div>

             <!-- 后端api分支  -->
             <div class='column'>
              <div class="field">
                <label class="label">切换后端api环境：</label>
                <div class="control">
                  <div class="select">
                    <select @change='onChangeApiBranch' placeholder="请选择分支" v-model="apiBranch">
                      <option value="">默认环境</option>
                      <option v-for="b in apiBranches" :key="b.name" :value="b.name">
                      {{ b.name }}</option>
                    </select>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        <div class="section container">
          <button @click='onSubmit' class="button is-primary">确认</button>
        </div>
      </main>
    </div>

    <script src="https://static-s.styd.cn/201810181618/vue.min-2.5.16.js"></script>
    <script src="https://static-s.styd.cn/201810181618/js.cookie.min.js"></script>
    <script>
      var branch_key = '<%= branch_key %>'
      var api_branch_key = '<%= api_branch_key %>'
      var api_branch = '<%= api_branch %>'
      var code = <%= code %>
      var app_name = '<%= app_name %>'
      var msg = '<%= msg %>'
      var branch = '<%= branch %>'
      var is_ok = code === 200
      var branches = <%- JSON.stringify(branches)%>;
      var referer = '<%= referer %>'

      const app = new Vue({
          el: '#app',
          filters:{
            dateFilter(key){
              const d = new Date(key)
              return (d.getMonth()+1) +'/'+(d.getDate())
            }
          },
          data: {
             branch_key,
              branches: branches,
              app_name: app_name,
              code: code,
              msg: msg,
              is_ok: is_ok,
              branch: branch,
              branch_text: branch || '默认分支',
              referer,

              apiBranch: api_branch,
              from: '',
              apiBranches:[
                {
                  name:'a'
                },
                {
                  name:'b'
                },
                {
                  name:'c'
                },
                {
                  name:'d'
                },
                {
                  name:'e'
                }
              ]
          },
          computed: {
              is_show_branch() {
                  return code !== 40001
              },
              is_show_form() {
                  return code === 200 || code === 40002
              },
              cookieDomain(){
                const currentHostname = location.hostname
                if( currentHostname.indexOf('.')  === -1  ) {
                  return currentHostname
                } else {
                  // 只使用一级域名domain
                  return '.' + currentHostname.split('.').slice(-2).join('.')
                }
              }
          },
          mounted(){
            const clone = s=> JSON.parse(JSON.stringify(s))
            console.log('cookie _branch_from ->', Cookies.get('_branch_from'))
            console.log('referer -> ',clone(this.referer))
            console.log('branch_key->',clone(this.branch_key))
            console.log('branch -> ',clone(this.branch))
            console.log('branches -> ',clone(this.branches))
            console.log('apiBranches -> ',clone(this.apiBranches))
            console.log('apiBranch -> ',clone(this.apiBranch))

            if(this.referer && new URL(this.referer).pathname!==location.pathname){
              console.log('set Cookie _branch_from ->',this.referer)
              Cookies.set('_branch_from',this.referer)
              
            }
            this.from = Cookies.get('_branch_from') || location.origin

          },
          methods: {
              goBack(){
                history.go(-1)
              },
              onDelete(){
                if(window.confirm(`是否确认删除分支目录${this.branch}?`)){
                  window.fetch(location.pathname+'/delete',{
                    method:'DELETE',
                    headers:{
                      'Content-Type':'application/json',
                    },
                    body:JSON.stringify({
                      branch:this.branch
                    })
                  })
                  .then(res=>res.json())
                  .then(json=> {
                    if(json.code!==200){
                      alert(json.msg)
                      return
                    }
                    location.reload()
                  })
                }
              },
              toApp(){
                location.href = this.from
              },
              onChangeBranch(){
                if(!this.branch){
                      Cookies.remove(branch_key,{
                        domain:this.cookieDomain
                      })
                  } else {
                      Cookies.set(branch_key, this.branch,{
                        domain: this.cookieDomain
                      })
                  }
              },
              onChangeApiBranch(){
                if(!this.apiBranch){
                  Cookies.remove(api_branch_key,{
                    domain:this.cookieDomain
                  })
                } else {
                  Cookies.set(api_branch_key,this.apiBranch,{
                    domain:this.cookieDomain
                  })
                }
              },
              onSubmit() {
                  this.toApp()
              }
          }
      })
    </script>
  </body>
</html>
